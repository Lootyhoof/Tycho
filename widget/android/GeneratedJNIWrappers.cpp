// GENERATED CODE
// Generated by the Java program at /build/annotationProcessors at compile time
// from annotations on Java methods. To update, change the annotations on the
// corresponding Javamethods and rerun the build. Manually updating this file
// will cause your build to fail.

#include "GeneratedJNIWrappers.h"
#include "mozilla/jni/Accessors.h"

namespace mozilla {
namespace widget {

constexpr char DownloadsIntegration::name[];

constexpr char DownloadsIntegration::ScanMedia_t::name[];
constexpr char DownloadsIntegration::ScanMedia_t::signature[];

void DownloadsIntegration::ScanMedia(mozilla::jni::String::Param a0, mozilla::jni::String::Param a1)
{
    return mozilla::jni::Method<ScanMedia_t>::Call(nullptr, nullptr, a0, a1);
}

constexpr char GoannaAppShell::name[];

constexpr char GoannaAppShell::AcknowledgeEvent_t::name[];
constexpr char GoannaAppShell::AcknowledgeEvent_t::signature[];

void GoannaAppShell::AcknowledgeEvent()
{
    return mozilla::jni::Method<AcknowledgeEvent_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::AddPluginViewWrapper_t::name[];
constexpr char GoannaAppShell::AddPluginViewWrapper_t::signature[];

void GoannaAppShell::AddPluginViewWrapper(mozilla::jni::Object::Param a0, float a1, float a2, float a3, float a4, bool a5)
{
    return mozilla::jni::Method<AddPluginViewWrapper_t>::Call(nullptr, nullptr, a0, a1, a2, a3, a4, a5);
}

constexpr char GoannaAppShell::AlertsProgressListener_OnProgress_t::name[];
constexpr char GoannaAppShell::AlertsProgressListener_OnProgress_t::signature[];

void GoannaAppShell::AlertsProgressListener_OnProgress(mozilla::jni::String::Param a0, int64_t a1, int64_t a2, mozilla::jni::String::Param a3)
{
    return mozilla::jni::Method<AlertsProgressListener_OnProgress_t>::Call(nullptr, nullptr, a0, a1, a2, a3);
}

constexpr char GoannaAppShell::CancelVibrate_t::name[];
constexpr char GoannaAppShell::CancelVibrate_t::signature[];

void GoannaAppShell::CancelVibrate()
{
    return mozilla::jni::Method<CancelVibrate_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::CheckURIVisited_t::name[];
constexpr char GoannaAppShell::CheckURIVisited_t::signature[];

void GoannaAppShell::CheckURIVisited(mozilla::jni::String::Param a0)
{
    return mozilla::jni::Method<CheckURIVisited_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::ClearMessageList_t::name[];
constexpr char GoannaAppShell::ClearMessageList_t::signature[];

void GoannaAppShell::ClearMessageList(int32_t a0)
{
    return mozilla::jni::Method<ClearMessageList_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::CloseCamera_t::name[];
constexpr char GoannaAppShell::CloseCamera_t::signature[];

void GoannaAppShell::CloseCamera()
{
    return mozilla::jni::Method<CloseCamera_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::CloseNotification_t::name[];
constexpr char GoannaAppShell::CloseNotification_t::signature[];

void GoannaAppShell::CloseNotification(mozilla::jni::String::Param a0)
{
    return mozilla::jni::Method<CloseNotification_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::ConnectionGetMimeType_t::name[];
constexpr char GoannaAppShell::ConnectionGetMimeType_t::signature[];

mozilla::jni::String::LocalRef GoannaAppShell::ConnectionGetMimeType(mozilla::jni::Object::Param a0)
{
    return mozilla::jni::Method<ConnectionGetMimeType_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::CreateInputStream_t::name[];
constexpr char GoannaAppShell::CreateInputStream_t::signature[];

mozilla::jni::Object::LocalRef GoannaAppShell::CreateInputStream(mozilla::jni::Object::Param a0)
{
    return mozilla::jni::Method<CreateInputStream_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::CreateMessageListWrapper_t::name[];
constexpr char GoannaAppShell::CreateMessageListWrapper_t::signature[];

void GoannaAppShell::CreateMessageListWrapper(int64_t a0, int64_t a1, mozilla::jni::ObjectArray::Param a2, int32_t a3, mozilla::jni::String::Param a4, bool a5, bool a6, int64_t a7, bool a8, int32_t a9)
{
    return mozilla::jni::Method<CreateMessageListWrapper_t>::Call(nullptr, nullptr, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

constexpr char GoannaAppShell::CreateShortcut_t::name[];
constexpr char GoannaAppShell::CreateShortcut_t::signature[];

void GoannaAppShell::CreateShortcut(mozilla::jni::String::Param a0, mozilla::jni::String::Param a1, mozilla::jni::String::Param a2)
{
    return mozilla::jni::Method<CreateShortcut_t>::Call(nullptr, nullptr, a0, a1, a2);
}

constexpr char GoannaAppShell::DeleteMessageWrapper_t::name[];
constexpr char GoannaAppShell::DeleteMessageWrapper_t::signature[];

void GoannaAppShell::DeleteMessageWrapper(int32_t a0, int32_t a1)
{
    return mozilla::jni::Method<DeleteMessageWrapper_t>::Call(nullptr, nullptr, a0, a1);
}

constexpr char GoannaAppShell::DisableBatteryNotifications_t::name[];
constexpr char GoannaAppShell::DisableBatteryNotifications_t::signature[];

void GoannaAppShell::DisableBatteryNotifications()
{
    return mozilla::jni::Method<DisableBatteryNotifications_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::DisableNetworkNotifications_t::name[];
constexpr char GoannaAppShell::DisableNetworkNotifications_t::signature[];

void GoannaAppShell::DisableNetworkNotifications()
{
    return mozilla::jni::Method<DisableNetworkNotifications_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::DisableScreenOrientationNotifications_t::name[];
constexpr char GoannaAppShell::DisableScreenOrientationNotifications_t::signature[];

void GoannaAppShell::DisableScreenOrientationNotifications()
{
    return mozilla::jni::Method<DisableScreenOrientationNotifications_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::DisableSensor_t::name[];
constexpr char GoannaAppShell::DisableSensor_t::signature[];

void GoannaAppShell::DisableSensor(int32_t a0)
{
    return mozilla::jni::Method<DisableSensor_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::EnableBatteryNotifications_t::name[];
constexpr char GoannaAppShell::EnableBatteryNotifications_t::signature[];

void GoannaAppShell::EnableBatteryNotifications()
{
    return mozilla::jni::Method<EnableBatteryNotifications_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::EnableLocation_t::name[];
constexpr char GoannaAppShell::EnableLocation_t::signature[];

void GoannaAppShell::EnableLocation(bool a0)
{
    return mozilla::jni::Method<EnableLocation_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::EnableLocationHighAccuracy_t::name[];
constexpr char GoannaAppShell::EnableLocationHighAccuracy_t::signature[];

void GoannaAppShell::EnableLocationHighAccuracy(bool a0)
{
    return mozilla::jni::Method<EnableLocationHighAccuracy_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::EnableNetworkNotifications_t::name[];
constexpr char GoannaAppShell::EnableNetworkNotifications_t::signature[];

void GoannaAppShell::EnableNetworkNotifications()
{
    return mozilla::jni::Method<EnableNetworkNotifications_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::EnableScreenOrientationNotifications_t::name[];
constexpr char GoannaAppShell::EnableScreenOrientationNotifications_t::signature[];

void GoannaAppShell::EnableScreenOrientationNotifications()
{
    return mozilla::jni::Method<EnableScreenOrientationNotifications_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::EnableSensor_t::name[];
constexpr char GoannaAppShell::EnableSensor_t::signature[];

void GoannaAppShell::EnableSensor(int32_t a0)
{
    return mozilla::jni::Method<EnableSensor_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::GamepadAdded_t::name[];
constexpr char GoannaAppShell::GamepadAdded_t::signature[];

void GoannaAppShell::GamepadAdded(int32_t a0, int32_t a1)
{
    return mozilla::jni::Method<GamepadAdded_t>::Call(nullptr, nullptr, a0, a1);
}

constexpr char GoannaAppShell::GetConnection_t::name[];
constexpr char GoannaAppShell::GetConnection_t::signature[];

mozilla::jni::Object::LocalRef GoannaAppShell::GetConnection(mozilla::jni::String::Param a0)
{
    return mozilla::jni::Method<GetConnection_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::GetContext_t::name[];
constexpr char GoannaAppShell::GetContext_t::signature[];

mozilla::jni::Object::LocalRef GoannaAppShell::GetContext()
{
    return mozilla::jni::Method<GetContext_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::GetCurrentBatteryInformationWrapper_t::name[];
constexpr char GoannaAppShell::GetCurrentBatteryInformationWrapper_t::signature[];

mozilla::jni::DoubleArray::LocalRef GoannaAppShell::GetCurrentBatteryInformationWrapper()
{
    return mozilla::jni::Method<GetCurrentBatteryInformationWrapper_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::GetCurrentNetworkInformationWrapper_t::name[];
constexpr char GoannaAppShell::GetCurrentNetworkInformationWrapper_t::signature[];

mozilla::jni::DoubleArray::LocalRef GoannaAppShell::GetCurrentNetworkInformationWrapper()
{
    return mozilla::jni::Method<GetCurrentNetworkInformationWrapper_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::GetDensity_t::name[];
constexpr char GoannaAppShell::GetDensity_t::signature[];

float GoannaAppShell::GetDensity()
{
    return mozilla::jni::Method<GetDensity_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::GetDpiWrapper_t::name[];
constexpr char GoannaAppShell::GetDpiWrapper_t::signature[];

int32_t GoannaAppShell::GetDpiWrapper()
{
    return mozilla::jni::Method<GetDpiWrapper_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::GetExtensionFromMimeTypeWrapper_t::name[];
constexpr char GoannaAppShell::GetExtensionFromMimeTypeWrapper_t::signature[];

mozilla::jni::String::LocalRef GoannaAppShell::GetExtensionFromMimeTypeWrapper(mozilla::jni::String::Param a0)
{
    return mozilla::jni::Method<GetExtensionFromMimeTypeWrapper_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::GetExternalPublicDirectory_t::name[];
constexpr char GoannaAppShell::GetExternalPublicDirectory_t::signature[];

mozilla::jni::String::LocalRef GoannaAppShell::GetExternalPublicDirectory(mozilla::jni::String::Param a0)
{
    return mozilla::jni::Method<GetExternalPublicDirectory_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::GetHandlersForMimeTypeWrapper_t::name[];
constexpr char GoannaAppShell::GetHandlersForMimeTypeWrapper_t::signature[];

mozilla::jni::ObjectArray::LocalRef GoannaAppShell::GetHandlersForMimeTypeWrapper(mozilla::jni::String::Param a0, mozilla::jni::String::Param a1)
{
    return mozilla::jni::Method<GetHandlersForMimeTypeWrapper_t>::Call(nullptr, nullptr, a0, a1);
}

constexpr char GoannaAppShell::GetHandlersForURLWrapper_t::name[];
constexpr char GoannaAppShell::GetHandlersForURLWrapper_t::signature[];

mozilla::jni::ObjectArray::LocalRef GoannaAppShell::GetHandlersForURLWrapper(mozilla::jni::String::Param a0, mozilla::jni::String::Param a1)
{
    return mozilla::jni::Method<GetHandlersForURLWrapper_t>::Call(nullptr, nullptr, a0, a1);
}

constexpr char GoannaAppShell::GetIconForExtensionWrapper_t::name[];
constexpr char GoannaAppShell::GetIconForExtensionWrapper_t::signature[];

mozilla::jni::ByteArray::LocalRef GoannaAppShell::GetIconForExtensionWrapper(mozilla::jni::String::Param a0, int32_t a1)
{
    return mozilla::jni::Method<GetIconForExtensionWrapper_t>::Call(nullptr, nullptr, a0, a1);
}

constexpr char GoannaAppShell::GetMessageWrapper_t::name[];
constexpr char GoannaAppShell::GetMessageWrapper_t::signature[];

void GoannaAppShell::GetMessageWrapper(int32_t a0, int32_t a1)
{
    return mozilla::jni::Method<GetMessageWrapper_t>::Call(nullptr, nullptr, a0, a1);
}

constexpr char GoannaAppShell::GetMimeTypeFromExtensionsWrapper_t::name[];
constexpr char GoannaAppShell::GetMimeTypeFromExtensionsWrapper_t::signature[];

mozilla::jni::String::LocalRef GoannaAppShell::GetMimeTypeFromExtensionsWrapper(mozilla::jni::String::Param a0)
{
    return mozilla::jni::Method<GetMimeTypeFromExtensionsWrapper_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::GetNextMessageInListWrapper_t::name[];
constexpr char GoannaAppShell::GetNextMessageInListWrapper_t::signature[];

void GoannaAppShell::GetNextMessageInListWrapper(int32_t a0, int32_t a1)
{
    return mozilla::jni::Method<GetNextMessageInListWrapper_t>::Call(nullptr, nullptr, a0, a1);
}

constexpr char GoannaAppShell::GetProxyForURIWrapper_t::name[];
constexpr char GoannaAppShell::GetProxyForURIWrapper_t::signature[];

mozilla::jni::String::LocalRef GoannaAppShell::GetProxyForURIWrapper(mozilla::jni::String::Param a0, mozilla::jni::String::Param a1, mozilla::jni::String::Param a2, int32_t a3)
{
    return mozilla::jni::Method<GetProxyForURIWrapper_t>::Call(nullptr, nullptr, a0, a1, a2, a3);
}

constexpr char GoannaAppShell::GetScreenDepthWrapper_t::name[];
constexpr char GoannaAppShell::GetScreenDepthWrapper_t::signature[];

int32_t GoannaAppShell::GetScreenDepthWrapper()
{
    return mozilla::jni::Method<GetScreenDepthWrapper_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::GetScreenOrientationWrapper_t::name[];
constexpr char GoannaAppShell::GetScreenOrientationWrapper_t::signature[];

int16_t GoannaAppShell::GetScreenOrientationWrapper()
{
    return mozilla::jni::Method<GetScreenOrientationWrapper_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::GetShowPasswordSetting_t::name[];
constexpr char GoannaAppShell::GetShowPasswordSetting_t::signature[];

bool GoannaAppShell::GetShowPasswordSetting()
{
    return mozilla::jni::Method<GetShowPasswordSetting_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::GetSystemColoursWrapper_t::name[];
constexpr char GoannaAppShell::GetSystemColoursWrapper_t::signature[];

mozilla::jni::IntArray::LocalRef GoannaAppShell::GetSystemColoursWrapper()
{
    return mozilla::jni::Method<GetSystemColoursWrapper_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::HandleGoannaMessageWrapper_t::name[];
constexpr char GoannaAppShell::HandleGoannaMessageWrapper_t::signature[];

void GoannaAppShell::HandleGoannaMessageWrapper(mozilla::jni::Object::Param a0)
{
    return mozilla::jni::Method<HandleGoannaMessageWrapper_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::HandleUncaughtException_t::name[];
constexpr char GoannaAppShell::HandleUncaughtException_t::signature[];

void GoannaAppShell::HandleUncaughtException(mozilla::jni::Object::Param a0, mozilla::jni::Throwable::Param a1)
{
    return mozilla::jni::Method<HandleUncaughtException_t>::Call(nullptr, nullptr, a0, a1);
}

constexpr char GoannaAppShell::HideProgressDialog_t::name[];
constexpr char GoannaAppShell::HideProgressDialog_t::signature[];

void GoannaAppShell::HideProgressDialog()
{
    return mozilla::jni::Method<HideProgressDialog_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::InitCameraWrapper_t::name[];
constexpr char GoannaAppShell::InitCameraWrapper_t::signature[];

mozilla::jni::IntArray::LocalRef GoannaAppShell::InitCameraWrapper(mozilla::jni::String::Param a0, int32_t a1, int32_t a2, int32_t a3)
{
    return mozilla::jni::Method<InitCameraWrapper_t>::Call(nullptr, nullptr, a0, a1, a2, a3);
}

constexpr char GoannaAppShell::IsNetworkLinkKnown_t::name[];
constexpr char GoannaAppShell::IsNetworkLinkKnown_t::signature[];

bool GoannaAppShell::IsNetworkLinkKnown()
{
    return mozilla::jni::Method<IsNetworkLinkKnown_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::IsNetworkLinkUp_t::name[];
constexpr char GoannaAppShell::IsNetworkLinkUp_t::signature[];

bool GoannaAppShell::IsNetworkLinkUp()
{
    return mozilla::jni::Method<IsNetworkLinkUp_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::IsTablet_t::name[];
constexpr char GoannaAppShell::IsTablet_t::signature[];

bool GoannaAppShell::IsTablet()
{
    return mozilla::jni::Method<IsTablet_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::KillAnyZombies_t::name[];
constexpr char GoannaAppShell::KillAnyZombies_t::signature[];

void GoannaAppShell::KillAnyZombies()
{
    return mozilla::jni::Method<KillAnyZombies_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::LoadPluginClass_t::name[];
constexpr char GoannaAppShell::LoadPluginClass_t::signature[];

mozilla::jni::ClassObject::LocalRef GoannaAppShell::LoadPluginClass(mozilla::jni::String::Param a0, mozilla::jni::String::Param a1)
{
    return mozilla::jni::Method<LoadPluginClass_t>::Call(nullptr, nullptr, a0, a1);
}

constexpr char GoannaAppShell::LockScreenOrientation_t::name[];
constexpr char GoannaAppShell::LockScreenOrientation_t::signature[];

void GoannaAppShell::LockScreenOrientation(int32_t a0)
{
    return mozilla::jni::Method<LockScreenOrientation_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::MarkURIVisited_t::name[];
constexpr char GoannaAppShell::MarkURIVisited_t::signature[];

void GoannaAppShell::MarkURIVisited(mozilla::jni::String::Param a0)
{
    return mozilla::jni::Method<MarkURIVisited_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::MoveTaskToBack_t::name[];
constexpr char GoannaAppShell::MoveTaskToBack_t::signature[];

void GoannaAppShell::MoveTaskToBack()
{
    return mozilla::jni::Method<MoveTaskToBack_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::NetworkLinkType_t::name[];
constexpr char GoannaAppShell::NetworkLinkType_t::signature[];

int32_t GoannaAppShell::NetworkLinkType()
{
    return mozilla::jni::Method<NetworkLinkType_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::NotifyDefaultPrevented_t::name[];
constexpr char GoannaAppShell::NotifyDefaultPrevented_t::signature[];

void GoannaAppShell::NotifyDefaultPrevented(bool a0)
{
    return mozilla::jni::Method<NotifyDefaultPrevented_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::NotifyIME_t::name[];
constexpr char GoannaAppShell::NotifyIME_t::signature[];

void GoannaAppShell::NotifyIME(int32_t a0)
{
    return mozilla::jni::Method<NotifyIME_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::NotifyIMEChange_t::name[];
constexpr char GoannaAppShell::NotifyIMEChange_t::signature[];

void GoannaAppShell::NotifyIMEChange(mozilla::jni::String::Param a0, int32_t a1, int32_t a2, int32_t a3)
{
    return mozilla::jni::Method<NotifyIMEChange_t>::Call(nullptr, nullptr, a0, a1, a2, a3);
}

constexpr char GoannaAppShell::NotifyIMEContext_t::name[];
constexpr char GoannaAppShell::NotifyIMEContext_t::signature[];

void GoannaAppShell::NotifyIMEContext(int32_t a0, mozilla::jni::String::Param a1, mozilla::jni::String::Param a2, mozilla::jni::String::Param a3)
{
    return mozilla::jni::Method<NotifyIMEContext_t>::Call(nullptr, nullptr, a0, a1, a2, a3);
}

constexpr char GoannaAppShell::NotifyWakeLockChanged_t::name[];
constexpr char GoannaAppShell::NotifyWakeLockChanged_t::signature[];

void GoannaAppShell::NotifyWakeLockChanged(mozilla::jni::String::Param a0, mozilla::jni::String::Param a1)
{
    return mozilla::jni::Method<NotifyWakeLockChanged_t>::Call(nullptr, nullptr, a0, a1);
}

constexpr char GoannaAppShell::NotifyXreExit_t::name[];
constexpr char GoannaAppShell::NotifyXreExit_t::signature[];

void GoannaAppShell::NotifyXreExit()
{
    return mozilla::jni::Method<NotifyXreExit_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::OpenUriExternal_t::name[];
constexpr char GoannaAppShell::OpenUriExternal_t::signature[];

bool GoannaAppShell::OpenUriExternal(mozilla::jni::String::Param a0, mozilla::jni::String::Param a1, mozilla::jni::String::Param a2, mozilla::jni::String::Param a3, mozilla::jni::String::Param a4, mozilla::jni::String::Param a5)
{
    return mozilla::jni::Method<OpenUriExternal_t>::Call(nullptr, nullptr, a0, a1, a2, a3, a4, a5);
}

constexpr char GoannaAppShell::PerformHapticFeedback_t::name[];
constexpr char GoannaAppShell::PerformHapticFeedback_t::signature[];

void GoannaAppShell::PerformHapticFeedback(bool a0)
{
    return mozilla::jni::Method<PerformHapticFeedback_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::PumpMessageLoop_t::name[];
constexpr char GoannaAppShell::PumpMessageLoop_t::signature[];

bool GoannaAppShell::PumpMessageLoop()
{
    return mozilla::jni::Method<PumpMessageLoop_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::RegisterSurfaceTextureFrameListener_t::name[];
constexpr char GoannaAppShell::RegisterSurfaceTextureFrameListener_t::signature[];

void GoannaAppShell::RegisterSurfaceTextureFrameListener(mozilla::jni::Object::Param a0, int32_t a1)
{
    return mozilla::jni::Method<RegisterSurfaceTextureFrameListener_t>::Call(nullptr, nullptr, a0, a1);
}

constexpr char GoannaAppShell::RemovePluginView_t::name[];
constexpr char GoannaAppShell::RemovePluginView_t::signature[];

void GoannaAppShell::RemovePluginView(mozilla::jni::Object::Param a0, bool a1)
{
    return mozilla::jni::Method<RemovePluginView_t>::Call(nullptr, nullptr, a0, a1);
}

constexpr char GoannaAppShell::RequestUiThreadCallback_t::name[];
constexpr char GoannaAppShell::RequestUiThreadCallback_t::signature[];

void GoannaAppShell::RequestUiThreadCallback(int64_t a0)
{
    return mozilla::jni::Method<RequestUiThreadCallback_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::ScheduleRestart_t::name[];
constexpr char GoannaAppShell::ScheduleRestart_t::signature[];

void GoannaAppShell::ScheduleRestart()
{
    return mozilla::jni::Method<ScheduleRestart_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::SendMessageWrapper_t::name[];
constexpr char GoannaAppShell::SendMessageWrapper_t::signature[];

void GoannaAppShell::SendMessageWrapper(mozilla::jni::String::Param a0, mozilla::jni::String::Param a1, int32_t a2)
{
    return mozilla::jni::Method<SendMessageWrapper_t>::Call(nullptr, nullptr, a0, a1, a2);
}

constexpr char GoannaAppShell::SetFullScreen_t::name[];
constexpr char GoannaAppShell::SetFullScreen_t::signature[];

void GoannaAppShell::SetFullScreen(bool a0)
{
    return mozilla::jni::Method<SetFullScreen_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::SetKeepScreenOn_t::name[];
constexpr char GoannaAppShell::SetKeepScreenOn_t::signature[];

void GoannaAppShell::SetKeepScreenOn(bool a0)
{
    return mozilla::jni::Method<SetKeepScreenOn_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::SetURITitle_t::name[];
constexpr char GoannaAppShell::SetURITitle_t::signature[];

void GoannaAppShell::SetURITitle(mozilla::jni::String::Param a0, mozilla::jni::String::Param a1)
{
    return mozilla::jni::Method<SetURITitle_t>::Call(nullptr, nullptr, a0, a1);
}

constexpr char GoannaAppShell::ShowAlertNotificationWrapper_t::name[];
constexpr char GoannaAppShell::ShowAlertNotificationWrapper_t::signature[];

void GoannaAppShell::ShowAlertNotificationWrapper(mozilla::jni::String::Param a0, mozilla::jni::String::Param a1, mozilla::jni::String::Param a2, mozilla::jni::String::Param a3, mozilla::jni::String::Param a4)
{
    return mozilla::jni::Method<ShowAlertNotificationWrapper_t>::Call(nullptr, nullptr, a0, a1, a2, a3, a4);
}

constexpr char GoannaAppShell::ShowInputMethodPicker_t::name[];
constexpr char GoannaAppShell::ShowInputMethodPicker_t::signature[];

void GoannaAppShell::ShowInputMethodPicker()
{
    return mozilla::jni::Method<ShowInputMethodPicker_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::StartMonitoringGamepad_t::name[];
constexpr char GoannaAppShell::StartMonitoringGamepad_t::signature[];

void GoannaAppShell::StartMonitoringGamepad()
{
    return mozilla::jni::Method<StartMonitoringGamepad_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::StopMonitoringGamepad_t::name[];
constexpr char GoannaAppShell::StopMonitoringGamepad_t::signature[];

void GoannaAppShell::StopMonitoringGamepad()
{
    return mozilla::jni::Method<StopMonitoringGamepad_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::UnlockProfile_t::name[];
constexpr char GoannaAppShell::UnlockProfile_t::signature[];

bool GoannaAppShell::UnlockProfile()
{
    return mozilla::jni::Method<UnlockProfile_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::UnlockScreenOrientation_t::name[];
constexpr char GoannaAppShell::UnlockScreenOrientation_t::signature[];

void GoannaAppShell::UnlockScreenOrientation()
{
    return mozilla::jni::Method<UnlockScreenOrientation_t>::Call(nullptr, nullptr);
}

constexpr char GoannaAppShell::UnregisterSurfaceTextureFrameListener_t::name[];
constexpr char GoannaAppShell::UnregisterSurfaceTextureFrameListener_t::signature[];

void GoannaAppShell::UnregisterSurfaceTextureFrameListener(mozilla::jni::Object::Param a0)
{
    return mozilla::jni::Method<UnregisterSurfaceTextureFrameListener_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::Vibrate1_t::name[];
constexpr char GoannaAppShell::Vibrate1_t::signature[];

void GoannaAppShell::Vibrate1(int64_t a0)
{
    return mozilla::jni::Method<Vibrate1_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaAppShell::VibrateA_t::name[];
constexpr char GoannaAppShell::VibrateA_t::signature[];

void GoannaAppShell::VibrateA(mozilla::jni::LongArray::Param a0, int32_t a1)
{
    return mozilla::jni::Method<VibrateA_t>::Call(nullptr, nullptr, a0, a1);
}

constexpr char GoannaJavaSampler::name[];

constexpr char GoannaJavaSampler::GetFrameNameJavaProfilingWrapper_t::name[];
constexpr char GoannaJavaSampler::GetFrameNameJavaProfilingWrapper_t::signature[];

mozilla::jni::String::LocalRef GoannaJavaSampler::GetFrameNameJavaProfilingWrapper(int32_t a0, int32_t a1, int32_t a2)
{
    return mozilla::jni::Method<GetFrameNameJavaProfilingWrapper_t>::Call(nullptr, nullptr, a0, a1, a2);
}

constexpr char GoannaJavaSampler::GetSampleTimeJavaProfiling_t::name[];
constexpr char GoannaJavaSampler::GetSampleTimeJavaProfiling_t::signature[];

double GoannaJavaSampler::GetSampleTimeJavaProfiling(int32_t a0, int32_t a1)
{
    return mozilla::jni::Method<GetSampleTimeJavaProfiling_t>::Call(nullptr, nullptr, a0, a1);
}

constexpr char GoannaJavaSampler::GetThreadNameJavaProfilingWrapper_t::name[];
constexpr char GoannaJavaSampler::GetThreadNameJavaProfilingWrapper_t::signature[];

mozilla::jni::String::LocalRef GoannaJavaSampler::GetThreadNameJavaProfilingWrapper(int32_t a0)
{
    return mozilla::jni::Method<GetThreadNameJavaProfilingWrapper_t>::Call(nullptr, nullptr, a0);
}

constexpr char GoannaJavaSampler::PauseJavaProfiling_t::name[];
constexpr char GoannaJavaSampler::PauseJavaProfiling_t::signature[];

void GoannaJavaSampler::PauseJavaProfiling()
{
    return mozilla::jni::Method<PauseJavaProfiling_t>::Call(nullptr, nullptr);
}

constexpr char GoannaJavaSampler::StartJavaProfiling_t::name[];
constexpr char GoannaJavaSampler::StartJavaProfiling_t::signature[];

void GoannaJavaSampler::StartJavaProfiling(int32_t a0, int32_t a1)
{
    return mozilla::jni::Method<StartJavaProfiling_t>::Call(nullptr, nullptr, a0, a1);
}

constexpr char GoannaJavaSampler::StopJavaProfiling_t::name[];
constexpr char GoannaJavaSampler::StopJavaProfiling_t::signature[];

void GoannaJavaSampler::StopJavaProfiling()
{
    return mozilla::jni::Method<StopJavaProfiling_t>::Call(nullptr, nullptr);
}

constexpr char GoannaJavaSampler::UnpauseJavaProfiling_t::name[];
constexpr char GoannaJavaSampler::UnpauseJavaProfiling_t::signature[];

void GoannaJavaSampler::UnpauseJavaProfiling()
{
    return mozilla::jni::Method<UnpauseJavaProfiling_t>::Call(nullptr, nullptr);
}

constexpr char RestrictedProfiles::name[];

constexpr char RestrictedProfiles::GetUserRestrictions_t::name[];
constexpr char RestrictedProfiles::GetUserRestrictions_t::signature[];

mozilla::jni::String::LocalRef RestrictedProfiles::GetUserRestrictions()
{
    return mozilla::jni::Method<GetUserRestrictions_t>::Call(nullptr, nullptr);
}

constexpr char RestrictedProfiles::IsAllowed_t::name[];
constexpr char RestrictedProfiles::IsAllowed_t::signature[];

bool RestrictedProfiles::IsAllowed(int32_t a0, mozilla::jni::String::Param a1)
{
    return mozilla::jni::Method<IsAllowed_t>::Call(nullptr, nullptr, a0, a1);
}

constexpr char RestrictedProfiles::IsUserRestricted_t::name[];
constexpr char RestrictedProfiles::IsUserRestricted_t::signature[];

bool RestrictedProfiles::IsUserRestricted()
{
    return mozilla::jni::Method<IsUserRestricted_t>::Call(nullptr, nullptr);
}

constexpr char SurfaceBits::name[];

constexpr char SurfaceBits::New_t::name[];
constexpr char SurfaceBits::New_t::signature[];

SurfaceBits::LocalRef SurfaceBits::New()
{
    return mozilla::jni::Constructor<New_t>::Call(nullptr, nullptr);
}

constexpr char SurfaceBits::Buffer_t::name[];
constexpr char SurfaceBits::Buffer_t::signature[];

mozilla::jni::Object::LocalRef SurfaceBits::Buffer() const
{
    return mozilla::jni::Field<Buffer_t>::Get(this, nullptr);
}

void SurfaceBits::Buffer(mozilla::jni::Object::Param a0) const
{
    return mozilla::jni::Field<Buffer_t>::Set(this, nullptr, a0);
}

constexpr char SurfaceBits::Format_t::name[];
constexpr char SurfaceBits::Format_t::signature[];

int32_t SurfaceBits::Format() const
{
    return mozilla::jni::Field<Format_t>::Get(this, nullptr);
}

void SurfaceBits::Format(int32_t a0) const
{
    return mozilla::jni::Field<Format_t>::Set(this, nullptr, a0);
}

constexpr char SurfaceBits::Height_t::name[];
constexpr char SurfaceBits::Height_t::signature[];

int32_t SurfaceBits::Height() const
{
    return mozilla::jni::Field<Height_t>::Get(this, nullptr);
}

void SurfaceBits::Height(int32_t a0) const
{
    return mozilla::jni::Field<Height_t>::Set(this, nullptr, a0);
}

constexpr char SurfaceBits::Width_t::name[];
constexpr char SurfaceBits::Width_t::signature[];

int32_t SurfaceBits::Width() const
{
    return mozilla::jni::Field<Width_t>::Get(this, nullptr);
}

void SurfaceBits::Width(int32_t a0) const
{
    return mozilla::jni::Field<Width_t>::Set(this, nullptr, a0);
}

constexpr char ThumbnailHelper::name[];

constexpr char ThumbnailHelper::SendThumbnail_t::name[];
constexpr char ThumbnailHelper::SendThumbnail_t::signature[];

void ThumbnailHelper::SendThumbnail(mozilla::jni::Object::Param a0, int32_t a1, bool a2, bool a3)
{
    return mozilla::jni::Method<SendThumbnail_t>::Call(nullptr, nullptr, a0, a1, a2, a3);
}

constexpr char DisplayPortMetrics::name[];

constexpr char DisplayPortMetrics::New_t::name[];
constexpr char DisplayPortMetrics::New_t::signature[];

DisplayPortMetrics::LocalRef DisplayPortMetrics::New(float a0, float a1, float a2, float a3, float a4)
{
    return mozilla::jni::Constructor<New_t>::Call(nullptr, nullptr, a0, a1, a2, a3, a4);
}

constexpr char DisplayPortMetrics::MPosition_t::name[];
constexpr char DisplayPortMetrics::MPosition_t::signature[];

mozilla::jni::Object::LocalRef DisplayPortMetrics::MPosition() const
{
    return mozilla::jni::Field<MPosition_t>::Get(this, nullptr);
}

constexpr char DisplayPortMetrics::Resolution_t::name[];
constexpr char DisplayPortMetrics::Resolution_t::signature[];

float DisplayPortMetrics::Resolution() const
{
    return mozilla::jni::Field<Resolution_t>::Get(this, nullptr);
}

constexpr char GLController::name[];

constexpr char GLController::CreateEGLSurfaceForCompositorWrapper_t::name[];
constexpr char GLController::CreateEGLSurfaceForCompositorWrapper_t::signature[];

mozilla::jni::Object::LocalRef GLController::CreateEGLSurfaceForCompositorWrapper() const
{
    return mozilla::jni::Method<CreateEGLSurfaceForCompositorWrapper_t>::Call(this, nullptr);
}

constexpr char GoannaLayerClient::name[];

constexpr char GoannaLayerClient::ActivateProgram_t::name[];
constexpr char GoannaLayerClient::ActivateProgram_t::signature[];

void GoannaLayerClient::ActivateProgram() const
{
    return mozilla::jni::Method<ActivateProgram_t>::Call(this, nullptr);
}

constexpr char GoannaLayerClient::ContentDocumentChanged_t::name[];
constexpr char GoannaLayerClient::ContentDocumentChanged_t::signature[];

void GoannaLayerClient::ContentDocumentChanged() const
{
    return mozilla::jni::Method<ContentDocumentChanged_t>::Call(this, nullptr);
}

constexpr char GoannaLayerClient::CreateFrame_t::name[];
constexpr char GoannaLayerClient::CreateFrame_t::signature[];

mozilla::jni::Object::LocalRef GoannaLayerClient::CreateFrame() const
{
    return mozilla::jni::Method<CreateFrame_t>::Call(this, nullptr);
}

constexpr char GoannaLayerClient::DeactivateProgramAndRestoreState_t::name[];
constexpr char GoannaLayerClient::DeactivateProgramAndRestoreState_t::signature[];

void GoannaLayerClient::DeactivateProgramAndRestoreState(bool a0, int32_t a1, int32_t a2, int32_t a3, int32_t a4) const
{
    return mozilla::jni::Method<DeactivateProgramAndRestoreState_t>::Call(this, nullptr, a0, a1, a2, a3, a4);
}

constexpr char GoannaLayerClient::GetDisplayPort_t::name[];
constexpr char GoannaLayerClient::GetDisplayPort_t::signature[];

mozilla::jni::Object::LocalRef GoannaLayerClient::GetDisplayPort(bool a0, bool a1, int32_t a2, mozilla::jni::Object::Param a3) const
{
    return mozilla::jni::Method<GetDisplayPort_t>::Call(this, nullptr, a0, a1, a2, a3);
}

constexpr char GoannaLayerClient::IsContentDocumentDisplayed_t::name[];
constexpr char GoannaLayerClient::IsContentDocumentDisplayed_t::signature[];

bool GoannaLayerClient::IsContentDocumentDisplayed() const
{
    return mozilla::jni::Method<IsContentDocumentDisplayed_t>::Call(this, nullptr);
}

constexpr char GoannaLayerClient::ProgressiveUpdateCallback_t::name[];
constexpr char GoannaLayerClient::ProgressiveUpdateCallback_t::signature[];

mozilla::jni::Object::LocalRef GoannaLayerClient::ProgressiveUpdateCallback(bool a0, float a1, float a2, float a3, float a4, float a5, bool a6) const
{
    return mozilla::jni::Method<ProgressiveUpdateCallback_t>::Call(this, nullptr, a0, a1, a2, a3, a4, a5, a6);
}

constexpr char GoannaLayerClient::SetFirstPaintViewport_t::name[];
constexpr char GoannaLayerClient::SetFirstPaintViewport_t::signature[];

void GoannaLayerClient::SetFirstPaintViewport(float a0, float a1, float a2, float a3, float a4, float a5, float a6) const
{
    return mozilla::jni::Method<SetFirstPaintViewport_t>::Call(this, nullptr, a0, a1, a2, a3, a4, a5, a6);
}

constexpr char GoannaLayerClient::SetPageRect_t::name[];
constexpr char GoannaLayerClient::SetPageRect_t::signature[];

void GoannaLayerClient::SetPageRect(float a0, float a1, float a2, float a3) const
{
    return mozilla::jni::Method<SetPageRect_t>::Call(this, nullptr, a0, a1, a2, a3);
}

constexpr char GoannaLayerClient::SyncFrameMetrics_t::name[];
constexpr char GoannaLayerClient::SyncFrameMetrics_t::signature[];

mozilla::jni::Object::LocalRef GoannaLayerClient::SyncFrameMetrics(float a0, float a1, float a2, float a3, float a4, float a5, float a6, bool a7, int32_t a8, int32_t a9, int32_t a10, int32_t a11, float a12, bool a13) const
{
    return mozilla::jni::Method<SyncFrameMetrics_t>::Call(this, nullptr, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

constexpr char GoannaLayerClient::SyncViewportInfo_t::name[];
constexpr char GoannaLayerClient::SyncViewportInfo_t::signature[];

mozilla::jni::Object::LocalRef GoannaLayerClient::SyncViewportInfo(int32_t a0, int32_t a1, int32_t a2, int32_t a3, float a4, bool a5) const
{
    return mozilla::jni::Method<SyncViewportInfo_t>::Call(this, nullptr, a0, a1, a2, a3, a4, a5);
}

constexpr char ImmutableViewportMetrics::name[];

constexpr char ImmutableViewportMetrics::New_t::name[];
constexpr char ImmutableViewportMetrics::New_t::signature[];

ImmutableViewportMetrics::LocalRef ImmutableViewportMetrics::New(float a0, float a1, float a2, float a3, float a4, float a5, float a6, float a7, float a8, float a9, float a10, float a11, float a12)
{
    return mozilla::jni::Constructor<New_t>::Call(nullptr, nullptr, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

constexpr char LayerView::name[];

constexpr char LayerView::RegisterCompositorWrapper_t::name[];
constexpr char LayerView::RegisterCompositorWrapper_t::signature[];

mozilla::jni::Object::LocalRef LayerView::RegisterCompositorWrapper()
{
    return mozilla::jni::Method<RegisterCompositorWrapper_t>::Call(nullptr, nullptr);
}

constexpr char LayerView::updateZoomedView_t::name[];
constexpr char LayerView::updateZoomedView_t::signature[];

void LayerView::updateZoomedView(mozilla::jni::Object::Param a0)
{
    return mozilla::jni::Method<updateZoomedView_t>::Call(nullptr, nullptr, a0);
}

constexpr char NativePanZoomController::name[];

constexpr char NativePanZoomController::RequestContentRepaintWrapper_t::name[];
constexpr char NativePanZoomController::RequestContentRepaintWrapper_t::signature[];

void NativePanZoomController::RequestContentRepaintWrapper(float a0, float a1, float a2, float a3, float a4) const
{
    return mozilla::jni::Method<RequestContentRepaintWrapper_t>::Call(this, nullptr, a0, a1, a2, a3, a4);
}

constexpr char ProgressiveUpdateData::name[];

constexpr char ProgressiveUpdateData::New_t::name[];
constexpr char ProgressiveUpdateData::New_t::signature[];

ProgressiveUpdateData::LocalRef ProgressiveUpdateData::New()
{
    return mozilla::jni::Constructor<New_t>::Call(nullptr, nullptr);
}

constexpr char ProgressiveUpdateData::SetViewport_t::name[];
constexpr char ProgressiveUpdateData::SetViewport_t::signature[];

void ProgressiveUpdateData::SetViewport(mozilla::jni::Object::Param a0) const
{
    return mozilla::jni::Method<SetViewport_t>::Call(this, nullptr, a0);
}

constexpr char ProgressiveUpdateData::Abort_t::name[];
constexpr char ProgressiveUpdateData::Abort_t::signature[];

bool ProgressiveUpdateData::Abort() const
{
    return mozilla::jni::Field<Abort_t>::Get(this, nullptr);
}

void ProgressiveUpdateData::Abort(bool a0) const
{
    return mozilla::jni::Field<Abort_t>::Set(this, nullptr, a0);
}

constexpr char ProgressiveUpdateData::Scale_t::name[];
constexpr char ProgressiveUpdateData::Scale_t::signature[];

float ProgressiveUpdateData::Scale() const
{
    return mozilla::jni::Field<Scale_t>::Get(this, nullptr);
}

void ProgressiveUpdateData::Scale(float a0) const
{
    return mozilla::jni::Field<Scale_t>::Set(this, nullptr, a0);
}

constexpr char ProgressiveUpdateData::X_t::name[];
constexpr char ProgressiveUpdateData::X_t::signature[];

float ProgressiveUpdateData::X() const
{
    return mozilla::jni::Field<X_t>::Get(this, nullptr);
}

void ProgressiveUpdateData::X(float a0) const
{
    return mozilla::jni::Field<X_t>::Set(this, nullptr, a0);
}

constexpr char ProgressiveUpdateData::Y_t::name[];
constexpr char ProgressiveUpdateData::Y_t::signature[];

float ProgressiveUpdateData::Y() const
{
    return mozilla::jni::Field<Y_t>::Get(this, nullptr);
}

void ProgressiveUpdateData::Y(float a0) const
{
    return mozilla::jni::Field<Y_t>::Set(this, nullptr, a0);
}

constexpr char ViewTransform::name[];

constexpr char ViewTransform::New_t::name[];
constexpr char ViewTransform::New_t::signature[];

ViewTransform::LocalRef ViewTransform::New(float a0, float a1, float a2)
{
    return mozilla::jni::Constructor<New_t>::Call(nullptr, nullptr, a0, a1, a2);
}

constexpr char ViewTransform::FixedLayerMarginBottom_t::name[];
constexpr char ViewTransform::FixedLayerMarginBottom_t::signature[];

float ViewTransform::FixedLayerMarginBottom() const
{
    return mozilla::jni::Field<FixedLayerMarginBottom_t>::Get(this, nullptr);
}

void ViewTransform::FixedLayerMarginBottom(float a0) const
{
    return mozilla::jni::Field<FixedLayerMarginBottom_t>::Set(this, nullptr, a0);
}

constexpr char ViewTransform::FixedLayerMarginLeft_t::name[];
constexpr char ViewTransform::FixedLayerMarginLeft_t::signature[];

float ViewTransform::FixedLayerMarginLeft() const
{
    return mozilla::jni::Field<FixedLayerMarginLeft_t>::Get(this, nullptr);
}

void ViewTransform::FixedLayerMarginLeft(float a0) const
{
    return mozilla::jni::Field<FixedLayerMarginLeft_t>::Set(this, nullptr, a0);
}

constexpr char ViewTransform::FixedLayerMarginRight_t::name[];
constexpr char ViewTransform::FixedLayerMarginRight_t::signature[];

float ViewTransform::FixedLayerMarginRight() const
{
    return mozilla::jni::Field<FixedLayerMarginRight_t>::Get(this, nullptr);
}

void ViewTransform::FixedLayerMarginRight(float a0) const
{
    return mozilla::jni::Field<FixedLayerMarginRight_t>::Set(this, nullptr, a0);
}

constexpr char ViewTransform::FixedLayerMarginTop_t::name[];
constexpr char ViewTransform::FixedLayerMarginTop_t::signature[];

float ViewTransform::FixedLayerMarginTop() const
{
    return mozilla::jni::Field<FixedLayerMarginTop_t>::Get(this, nullptr);
}

void ViewTransform::FixedLayerMarginTop(float a0) const
{
    return mozilla::jni::Field<FixedLayerMarginTop_t>::Set(this, nullptr, a0);
}

constexpr char ViewTransform::OffsetX_t::name[];
constexpr char ViewTransform::OffsetX_t::signature[];

float ViewTransform::OffsetX() const
{
    return mozilla::jni::Field<OffsetX_t>::Get(this, nullptr);
}

void ViewTransform::OffsetX(float a0) const
{
    return mozilla::jni::Field<OffsetX_t>::Set(this, nullptr, a0);
}

constexpr char ViewTransform::OffsetY_t::name[];
constexpr char ViewTransform::OffsetY_t::signature[];

float ViewTransform::OffsetY() const
{
    return mozilla::jni::Field<OffsetY_t>::Get(this, nullptr);
}

void ViewTransform::OffsetY(float a0) const
{
    return mozilla::jni::Field<OffsetY_t>::Set(this, nullptr, a0);
}

constexpr char ViewTransform::Scale_t::name[];
constexpr char ViewTransform::Scale_t::signature[];

float ViewTransform::Scale() const
{
    return mozilla::jni::Field<Scale_t>::Get(this, nullptr);
}

void ViewTransform::Scale(float a0) const
{
    return mozilla::jni::Field<Scale_t>::Set(this, nullptr, a0);
}

constexpr char ViewTransform::X_t::name[];
constexpr char ViewTransform::X_t::signature[];

float ViewTransform::X() const
{
    return mozilla::jni::Field<X_t>::Get(this, nullptr);
}

void ViewTransform::X(float a0) const
{
    return mozilla::jni::Field<X_t>::Set(this, nullptr, a0);
}

constexpr char ViewTransform::Y_t::name[];
constexpr char ViewTransform::Y_t::signature[];

float ViewTransform::Y() const
{
    return mozilla::jni::Field<Y_t>::Get(this, nullptr);
}

void ViewTransform::Y(float a0) const
{
    return mozilla::jni::Field<Y_t>::Set(this, nullptr, a0);
}

constexpr char NativeZip::name[];

constexpr char NativeZip::CreateInputStream_t::name[];
constexpr char NativeZip::CreateInputStream_t::signature[];

mozilla::jni::Object::LocalRef NativeZip::CreateInputStream(mozilla::jni::Object::Param a0, int32_t a1) const
{
    return mozilla::jni::Method<CreateInputStream_t>::Call(this, nullptr, a0, a1);
}

constexpr char MatrixBlobCursor::name[];

constexpr char MatrixBlobCursor::New_t::name[];
constexpr char MatrixBlobCursor::New_t::signature[];

MatrixBlobCursor::LocalRef MatrixBlobCursor::New(mozilla::jni::ObjectArray::Param a0)
{
    return mozilla::jni::Constructor<New_t>::Call(nullptr, nullptr, a0);
}

constexpr char MatrixBlobCursor::New2_t::name[];
constexpr char MatrixBlobCursor::New2_t::signature[];

MatrixBlobCursor::LocalRef MatrixBlobCursor::New(mozilla::jni::ObjectArray::Param a0, int32_t a1)
{
    return mozilla::jni::Constructor<New2_t>::Call(nullptr, nullptr, a0, a1);
}

constexpr char MatrixBlobCursor::AddRow_t::name[];
constexpr char MatrixBlobCursor::AddRow_t::signature[];

void MatrixBlobCursor::AddRow(mozilla::jni::Object::Param a0) const
{
    return mozilla::jni::Method<AddRow_t>::Call(this, nullptr, a0);
}

constexpr char MatrixBlobCursor::AddRow2_t::name[];
constexpr char MatrixBlobCursor::AddRow2_t::signature[];

void MatrixBlobCursor::AddRow(mozilla::jni::Object::Param a0, int32_t a1) const
{
    return mozilla::jni::Method<AddRow2_t>::Call(this, nullptr, a0, a1);
}

constexpr char MatrixBlobCursor::AddRow3_t::name[];
constexpr char MatrixBlobCursor::AddRow3_t::signature[];

void MatrixBlobCursor::AddRow(mozilla::jni::ObjectArray::Param a0) const
{
    return mozilla::jni::Method<AddRow3_t>::Call(this, nullptr, a0);
}

constexpr char SQLiteBridgeException::name[];

constexpr char SQLiteBridgeException::New_t::name[];
constexpr char SQLiteBridgeException::New_t::signature[];

SQLiteBridgeException::LocalRef SQLiteBridgeException::New()
{
    return mozilla::jni::Constructor<New_t>::Call(nullptr, nullptr);
}

constexpr char SQLiteBridgeException::New2_t::name[];
constexpr char SQLiteBridgeException::New2_t::signature[];

SQLiteBridgeException::LocalRef SQLiteBridgeException::New(mozilla::jni::String::Param a0)
{
    return mozilla::jni::Constructor<New2_t>::Call(nullptr, nullptr, a0);
}

constexpr char SQLiteBridgeException::SerialVersionUID_t::name[];
constexpr char SQLiteBridgeException::SerialVersionUID_t::signature[];

int64_t SQLiteBridgeException::SerialVersionUID()
{
    return mozilla::jni::Field<SerialVersionUID_t>::Get(nullptr, nullptr);
}

constexpr char Clipboard::name[];

constexpr char Clipboard::ClearText_t::name[];
constexpr char Clipboard::ClearText_t::signature[];

void Clipboard::ClearText()
{
    return mozilla::jni::Method<ClearText_t>::Call(nullptr, nullptr);
}

constexpr char Clipboard::GetClipboardTextWrapper_t::name[];
constexpr char Clipboard::GetClipboardTextWrapper_t::signature[];

mozilla::jni::String::LocalRef Clipboard::GetClipboardTextWrapper()
{
    return mozilla::jni::Method<GetClipboardTextWrapper_t>::Call(nullptr, nullptr);
}

constexpr char Clipboard::HasText_t::name[];
constexpr char Clipboard::HasText_t::signature[];

bool Clipboard::HasText()
{
    return mozilla::jni::Method<HasText_t>::Call(nullptr, nullptr);
}

constexpr char Clipboard::SetClipboardText_t::name[];
constexpr char Clipboard::SetClipboardText_t::signature[];

void Clipboard::SetClipboardText(mozilla::jni::String::Param a0)
{
    return mozilla::jni::Method<SetClipboardText_t>::Call(nullptr, nullptr, a0);
}


} /* widget */
} /* mozilla */
